version: 2.1
orbs:
  android: circleci/android@2.1.2
  slack: circleci/slack@4.10.1
commands:
  save-workspace:
    steps:
      - persist_to_workspace:
          root: .
          paths: .
  use-workspace:
    steps:
      - attach_workspace:
          at: .
  get-artifacts-url:
    steps:
      - run:
          name: Get artifacts url
          command: |
            artifacts=$(curl -X GET "https://circleci.com/api/v2/project/gh/gen0083/FilteredHatebu/$CIRCLE_BUILD_NUM/artifacts" \
            -H "Accept: application/json" \
            -H "Circle-Token: $CIRCLE_API_TOKEN" | jq .items | jq '.[] | select(.["url"] | contains("index.html"))' | jq .url) 
            echo "export ARTIFACT_RESPONSE=$artifacts" >> $BASH_ENV
            echo $artifacts
jobs:
  build:
    machine:
      image: android:2022.08.1
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: build
          command: ./gradlew compileMockDebugSources
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - save-workspace
  test:
    machine:
      image: android:2022.08.1
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
      JVM_OPTS: -Xmx3200m
    steps:
      - use-workspace
      - run:
          name: Unit Test
          command: ./gradlew testMockDebugUnitTest
      - store_test_results:
          path: app/build/reports/tests
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - get-artifacts-url
      - run:
          name: Post to slack
          command: |
            curl -s -S -X POST --data-urlencode "payload={'channel': '#ci', 'username': 'circleci', \
            'text': 'test report : JUnit : \
            <$ARTIFACT_RESPONSE| junit test report > \
            (build $CIRCLE_BUILD_NUM)' }" $SLACK_TEST_HOOK >/dev/null
  uitest:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2022.08.1
    steps:
      - use-workspace
      - android/create-avd:
          avd-name: myavd
          system-image: system-images;android-29;default;x86
          install: true
      - android/start-emulator:
          avd-name: myavd
          no-window: true
          run-logcat: true
          post-emulator-launch-assemble-command: ./gradlew assembleAndroidTest
      - run:
          name: Run android connected test
          command: ./gradlew connectedMockDebugAndroidTest
      - store_test_results:
          path: app/build/reports/androidTests
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - get-artifacts-url
      - run:
          name: Post to slack
          command: |
            curl -s -S -X POST --data-urlencode "payload={'channel': '#ci', 'username': 'circleci', \
            'text': 'test report : UI test \
            \nemulator test : \
            <$ARTIFACT_RESPONSE| Espresso test report > \
            (build $CIRCLE_BUILD_NUM)' }" $SLACK_TEST_HOOK >/dev/null
workflows:
  version: 2
  build_and_uitest:
    jobs:
      - build
      - test:
          requires:
            - build
      - uitest:
          requires:
            - build